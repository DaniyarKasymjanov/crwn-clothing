{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshopToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/daniyar/Desktop/Udemy code/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshopToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACI,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMnB,UAAU,CAACQ,eAAe,CAACY,uBAAjB,EAA0CX,qBAA1C,CAAhB;AACA;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC5B,QAAMlB,GAAG,CAAC,CAAEF,IAAI,CAACkB,qBAAD,CAAN,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('fired');\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshopToMap, snapshot);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message));\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport function* shopSagas() {\n\tyield all([ call(fetchCollectionsStart) ]);\n}\n"]},"metadata":{},"sourceType":"module"}