{"ast":null,"code":"var _jsxFileName = \"/Users/daniyar/Desktop/Udemy code/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopePage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopePage);","map":{"version":3,"sources":["/Users/daniyar/Desktop/Udemy code/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopePage","Component","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAME,SAAN,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AACvCC,EAAAA,iBAAiB,GAAG;AAAA,UACXT,0BADW,GACoB,KAAKU,KADzB,CACXV,0BADW;AAEnBA,IAAAA,0BAA0B;AAC1B;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKD,KADnC;AAAA,UACAE,KADA,eACAA,KADA;AAAA,UACOC,kBADP,eACOA,kBADP;AAGR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEV,4BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AACC,MAAA,IAAI,YAAKQ,KAAK,CAACE,IAAX,mBADL;AAEC,MAAA,MAAM,EAAGJ,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACG;AAAvC,SAA+DH,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AASA;;AAlBsC;;AAqBxC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAChDe,EAAAA,kBAAkB,EAAEX;AAD4B,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACzCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADD,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopePage extends React.Component {\n\tcomponentDidMount() {\n\t\tconst { fetchCollectionsStartAsync } = this.props;\n\t\tfetchCollectionsStartAsync();\n\t}\n\n\trender() {\n\t\tconst { match, isCollectionLoaded } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverviewContainer} />\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={(props) => <CollectionPageWithSpinner isLoading={!isCollectionLoaded} {...props} />}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tisCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopePage);\n"]},"metadata":{},"sourceType":"module"}