{"ast":null,"code":"import ShopActionType from './shop.types';\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshopToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/daniyar/Desktop/Udemy code/crwn-clothing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionType","firestore","convertCollectionsSnapshopToMap","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,cAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEL,cAAc,CAACM;AADsB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC3DH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADqC;AAE3DC,EAAAA,OAAO,EAAEF;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACzDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADmC;AAEzDH,EAAAA,OAAO,EAAEE;AAFgD,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMZ,cAAc,GAAGN,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,KALF,EAMEa,KANF,CAMSC,KAAD,IAAWP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN3B;AAOA,GAXD;AAYA,CAbM","sourcesContent":["import ShopActionType from './shop.types';\n\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\n\nexport const fetchCollectionsStart = () => ({\n\ttype: ShopActionType.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn (dispatch) => {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tdispatch(fetchCollectionsStart());\n\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then((snapshot) => {\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshopToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t\t})\n\t\t\t.catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}