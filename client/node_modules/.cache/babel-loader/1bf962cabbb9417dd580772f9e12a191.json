{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshopToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {} //   collectionRef\n  //     .get()\n  //     .then((snapshot) => {\n  //       const collectionsMap = convertCollectionsSnapshopToMap(snapshot);\n  //       dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     })\n  //     .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  // };\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/daniyar/Desktop/Udemy code/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshopToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc,CAAE,CARsB,CAUxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMjB,SAAS,CAACO,eAAe,CAACW,uBAAjB,EAA0CV,qBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshopToMap } from '../../firebase/firebase.utils';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('fired');\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshopToMap, snapshot);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {}\n\n\t//   collectionRef\n\t//     .get()\n\t//     .then((snapshot) => {\n\t//       const collectionsMap = convertCollectionsSnapshopToMap(snapshot);\n\t//       dispatch(fetchCollectionsSuccess(collectionsMap));\n\t//     })\n\t//     .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\t// };\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}